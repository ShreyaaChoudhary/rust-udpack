var searchIndex = JSON.parse('{\
"rust_udpack":{"doc":"Examples","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Transport","Udpack","accept","borrow","borrow","borrow_mut","borrow_mut","close","connect","drop","fmt","fmt","from","from","into","into","new","ping","read","remote_addr","shutdown","shutdown","try_from","try_from","try_into","try_into","type_id","type_id","uuid","vzip","vzip","writable","write"],"q":["rust_udpack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents a connection instance, there are two ways to …","It is the main implementation class of UDPack, a …","Accepts a new connection, returns a Transport instance if …","","","","","Close the connection rudely without flushing the reading …","Establish a connection to the udpack instance at the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs an instance with the provided bind address.The …","Examples","Examples","return remote address of the connection.","Examples","Stop accepting new connections and notify all existing …","","","","","","","return uuid of the connection.","","","Examples","Examples"],"i":[0,0,1,2,1,2,1,2,1,2,2,1,2,1,2,1,1,2,2,2,2,1,2,1,2,1,2,1,2,2,1,2,2],"f":[null,null,[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["result",6]],[[["",0],["str",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["tosocketaddrs",8]]],[[["",0]],["result",6]],[[["",0]]],[[["",0]]],[[["",0]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["u64",0]],[[]],[[]],[[["",0]]],[[["",0],["bytes",3]]]],"p":[[3,"Udpack"],[3,"Transport"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};